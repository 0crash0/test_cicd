pipeline {

    agent any
    environment {

        TELEGRAM_TOKEN = credentials('telegram-token') // change this line with your credential id for Telegram bot access token
        TELEGRAM_CHAT_ID = 389929520 // change this line with your credential id for Telegram bot chat id

        TEXT_PRE_BUILD = "Jenkins is building ${JOB_NAME}"
        TEXT_SUCCESS_BUILD = "${JOB_NAME} is Success: ${SOURCE_BRANCH_NAME} is deleted from kuber"
        TEXT_FAILURE_BUILD = "${JOB_NAME} is Failure"
        TEXT_ABORTED_BUILD = "${JOB_NAME} is Aborted"
      }
    stages {

        stage("Interactive_Input") {
            steps {
                //sh 'echo $(env)'
                telegramSend(message: "Choose required", chatId: "${env.TELEGRAM_CHAT_ID}")
                script {

                    // Variables for input
                    def inputConfig
                    def inputTest

                    // Get the input
                    def userInput = input(
                            id: 'userInput', message: "Branch ${SOURCE_BRANCH_NAME} is deleted are we remove it from kuber?",
                            parameters: [

                                    string(defaultValue: 'None',
                                            description: 'Path of config file',
                                            name: 'Config'),
                                    string(defaultValue: 'None',
                                            description: 'Test Info file',
                                            name: 'Test'),
                                    [$class: 'ChoiceParameterDefinition',
                                                                        choices: ['no','yes'].join('\n'),
                                                                        name: 'inputRemove',
                                                                        description: 'Remove namespace?'],
                            ])

                    // Save to variables. Default to empty string if not found.
                    inputConfig = userInput.Config?:''
                    inputTest = userInput.Test?:''

                    inputRemove = userInput.inputRemove

                    // Echo to console
                    echo("IQA Sheet Path: ${inputConfig}")
                    echo("Test Info file path: ${inputTest}")

                    // Write to file
                    //writeFile file: "inputData.txt", text: "Config=${inputConfig}\r\nTest=${inputTest}"

                    // Archive the file (or whatever you want to do with it)
                    //archiveArtifacts 'inputData.txt'
                }


            }
        }
        stage('Integrate Remote k8s with Jenkins ') {

        			  steps {
        				script {
        					//if(params.Deploy == "yes"){
        					if(inputRemove== "yes"){
        						sh "echo 'Deploy to kubernetes is started!'"
        						withKubeConfig( clusterName: 'microk8s-cluster', contextName: 'microk8s-cluster', credentialsId: 'kube_just_cert', namespace: 'def', restrictKubeConfigAccess: false, serverUrl: 'https://172.16.0.230:16443') {
        						  sh 'curl -LO "https://dl.k8s.io/release/v1.31.0/bin/linux/amd64/kubectl"'
        						  sh 'chmod u+x ./kubectl'
        						  sh "./kubectl delete namespace nginx-fpm-${SOURCE_BRANCH_NAME} -f"
        						}
        						sh "echo 'nginx-fpm-${SOURCE_BRANCH_NAME} Removed!'"
        					} else {
        						sh "echo 'Removing is canceled!'"
        					}
        				}
        			  }
        	}
          }
    }
    post{
          success{
               //telegramSend(message: 'Hello World', chatId: 389929520)
                  sh "curl -s -X POST https://api.telegram.org/bot${env.TELEGRAM_TOKEN}/sendMessage -d chat_id='${env.TELEGRAM_CHAT_ID}' -d text='${env.TEXT_SUCCESS_BUILD}'"
          }
          /*failure{
               //telegramSend(message: 'Hello World', chatId: 389929520)
               sh "curl -s -X POST https://api.telegram.org/bot${env.TELEGRAM_TOKEN}/sendMessage -d chat_id=${env.TELEGRAM_CHAT_ID} -d text=${env.TEXT_SUCCESS_BUILD}"
          }
          aborted{
               //telegramSend(message: 'Hello World', chatId: 389929520)
              sh ''' curl -s -X POST https://api.telegram.org/bot"${env.TELEGRAM_TOKEN}"/sendMessage -d chat_id="$TELEGRAM_CHAT_ID" -d text="${env.TEXT_FAILURE_BUILD}" '''
          }*/

  }
}