---
#namespace
apiVersion: v1
kind: Namespace
metadata:
  name: nginx-fpm-${BRANCH_NAME}
  labels:
    name: nginx-fpm-${BRANCH_NAME}


---
# PV

apiVersion: v1
kind: PersistentVolume
metadata:
  name: nginx-fpm-${BRANCH_NAME}-pv
  namespace: nginx-fpm-${BRANCH_NAME}
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/var/www-${BRANCH_NAME}"


---
# PVC

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nginx-fpm-${BRANCH_NAME}-pvc
  namespace: nginx-fpm-${BRANCH_NAME}
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi




---
#NGINX deployment

apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  labels:
    app: nginx
    layer: frontend
  namespace: nginx-fpm-${BRANCH_NAME}
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      initContainers:
        - name: init-service
          #image: alpine
          image: ${dockerimagename}:${BRANCH_NAME}
          command: ["sh", "-c"]
          args:
            - |
              rm -rf /usr/share/nginx/html/* && cp -R /var/www/html/ /usr/share/nginx/html/
          #    svn export --non-interactive --no-auth-cache --username "saprinap" --password "Cfvjcjan2024" "http://redmine.mow.samo.ru/svn/incoming.online/_client/sayama/api-incoming/" --depth "infinity" /usr/share/nginx/html/api-incoming/

          #    git clone https://github.com/ElfQrin/webservertest.git /usr/share/nginx/html
            #command: ['sh', '-c', "until nslookup service.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for service; sleep 2; done"]
          volumeMounts:
            - name: nginx-fpm-data
              mountPath: /usr/share/nginx/html
      containers:
        - name: nginx
          image: nginx:stable-alpine3.20
          ports:
            - containerPort: 80
          volumeMounts:
            - name: nginx-fpm-data
              mountPath: /usr/share/nginx/html
            - name: nginx-config
              subPath: nginx.conf
              mountPath: /etc/nginx/nginx.conf
            - name: nginx-config
              #mountPath: /etc/nginx/conf.d/default.conf
              subPath: default
              mountPath: /etc/nginx/sites-enabled/default
            - name: nginx-config
              subPath: api.samo
              mountPath: /etc/nginx/conf.d/samo/api.samo
            - name: nginx-config
              subPath: b2b.samo
              mountPath: /etc/nginx/conf.d/samo/b2b.samo
          resources:
            limits:
              cpu: 1000m
            requests:
              cpu: 200m
          readinessProbe:
            tcpSocket:
              port: 80
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 30
      volumes:
        #- name: contents
        #  hostPath:
        #    path: /var/website
        #    type: Directory
        - name: nginx-fpm-data
          persistentVolumeClaim:
            claimName: nginx-fpm-${BRANCH_NAME}-pvc
        - name: nginx-config 
          configMap: 
            name: nginx-config

---
#NGINX service

kind: Service 
apiVersion: v1 
metadata:
  name: nginx
  labels:
    app: nginx
    layer: frontend
  namespace: nginx-fpm-${BRANCH_NAME}
spec:
  type: ClusterIP
  selector:
    app: nginx
  ports:
    - port: 80
      targetPort: 80
      #nodePort: 30000



---
#PHP-FPM deployment

apiVersion: apps/v1
kind: Deployment
metadata:
  name: phpfpm
  labels:
    app: phpfpm
    layer: backend
  namespace: nginx-fpm-${BRANCH_NAME}
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: phpfpm
  template:
    metadata:
      labels:
        app: phpfpm
    spec:
      containers:
        - name: phpfpm
          image: 0crash0/php-samo:8.3.11-fpm-msodbc18-alpine3.20
          ports:
            - containerPort: 9000
          volumeMounts:
            - name: nginx-fpm-data
              mountPath: /usr/share/nginx/html
          resources:
            limits:
              cpu: 500m
            requests:
              cpu: 200m
          readinessProbe:
            tcpSocket:
              port: 9000
          lifecycle:
            preStop:
              exec:
                command: [ "/bin/bash","-c","/bin/sleep 1; kill -QUIT 1" ]
        
      volumes:
        - name: nginx-fpm-data
          persistentVolumeClaim:
            claimName: nginx-fpm-${BRANCH_NAME}-pvc


---

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: php-horiz-scaler
  namespace: nginx-fpm-${BRANCH_NAME}
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: phpfpm
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 10

---
#PHP-FPM service

kind: Service 
apiVersion: v1 
metadata:
  name: php-svc
  labels:
    app: phpfpm
    layer: backend
  namespace: nginx-fpm-${BRANCH_NAME}
spec:
  ports:
    - port: 9000
      targetPort: 9000
  selector:
    app: phpfpm

---
# ingress

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nginx-fpm-ing
  namespace: nginx-fpm-${BRANCH_NAME}
spec:
  defaultBackend:
    service:
      name: nginx
      port:
        number: 80
  rules:
    - host: test-${BRANCH_NAME}.samo.ru
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: nginx
                port:
                  number: 80